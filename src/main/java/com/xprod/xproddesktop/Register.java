package com.xprod.xproddesktop;

import com.xprod.xproddesktop.dao.Connexion;
import com.xprod.xproddesktop.dao.UserDao;
import com.xprod.xproddesktop.model.DataEncryption;
import com.xprod.xproddesktop.model.Users;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Samir Ibrahim
 */
public class Register extends javax.swing.JFrame {

    /**
     * Creates new form Login
     */
    public Register() {
        initComponents();
        this.setTitle("Inscription Admin");
        tableUpdate();
    }
    
    //Connexion 
    Connexion cn = new Connexion();
    Connection con;
    PreparedStatement pst;
    
    //Mise à jour du tableau
    private void tableUpdate() {
        int cpt; //initialisation d'un compteur
        
        try {
            
            con = cn.getCon();
            
            String query = "SELECT * FROM user";
            pst = con.prepareStatement(query);
            
            ResultSet rs = pst.executeQuery(); //Je mets mes données dans un tableau
            
            ResultSetMetaData rsmd = rs.getMetaData(); //Je récupère toutes mes métadonnées
            cpt = rsmd.getColumnCount(); //Je compte toutes mes métadonnées
            
            DefaultTableModel dtm = (DefaultTableModel) tableUsers.getModel();
            dtm.setRowCount(0);
            
            while(rs.next()) {
                Vector vect = new Vector();
                
                vect.add(rs.getString("idUser"));
                vect.add(rs.getString("username"));
                vect.add(rs.getString("password"));
                vect.add(rs.getString("authorization"));
                dtm.addRow(vect);
               
            }
            
        } catch (Exception e) {
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jProgressBar1 = new javax.swing.JProgressBar();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtUsernameReg = new javax.swing.JTextField();
        btnCancel = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtPasswordReg = new javax.swing.JPasswordField();
        btnRegister = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableUsers = new javax.swing.JTable();
        btnSupprimer = new javax.swing.JButton();
        comboboxAuthorizationReg = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 176, 255));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Username :");

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Password :");

        btnCancel.setBackground(new java.awt.Color(0, 0, 0));
        btnCancel.setForeground(new java.awt.Color(255, 153, 0));
        btnCancel.setText("Annuler");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Liberation Sans", 1, 48)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("XPROD");

        btnRegister.setText("S'inscrire");
        btnRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterActionPerformed(evt);
            }
        });

        jLabel6.setBackground(new java.awt.Color(255, 255, 255));
        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Authorisation :");

        tableUsers.setBackground(new java.awt.Color(242, 242, 242));
        tableUsers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Username", "Password", "Authorization"
            }
        ));
        jScrollPane1.setViewportView(tableUsers);

        btnSupprimer.setBackground(new java.awt.Color(255, 51, 51));
        btnSupprimer.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N
        btnSupprimer.setForeground(new java.awt.Color(255, 255, 255));
        btnSupprimer.setText("Supprimer");
        btnSupprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSupprimerActionPerformed(evt);
            }
        });

        comboboxAuthorizationReg.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sélectionnez :", "Administrateur", "Client" }));
        comboboxAuthorizationReg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboboxAuthorizationRegActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(250, 250, 250)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnRegister)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(79, 79, 79)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnCancel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSupprimer)
                        .addGap(226, 226, 226))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtPasswordReg, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                            .addComponent(txtUsernameReg, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                            .addComponent(comboboxAuthorizationReg, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(67, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 921, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(419, 419, 419))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel4)
                .addGap(41, 41, 41)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtUsernameReg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtPasswordReg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(comboboxAuthorizationReg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRegister)
                    .addComponent(btnCancel)
                    .addComponent(btnSupprimer))
                .addGap(50, 50, 50)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 150, 1040, 650));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/inscription.png"))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(480, 480, 480)
                .addComponent(jLabel2)
                .addContainerGap(460, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(22, 22, 22))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1040, 140));

        jMenuBar1.setBackground(new java.awt.Color(220, 220, 220));

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        if (txtUsernameReg.getText().equals("") || txtPasswordReg.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Entrez le nom d'utilisateur ou le mot de passe", "Message", JOptionPane.INFORMATION_MESSAGE);
        } else {
            try {
                    listLogin = udao.rechercheLogin(txtUsernameReg.getText(), DataEncryption.getSHA256(txtPasswordReg.getText()));
                if(listLogin.size()>= 1) { //Il faut qu'il y ait au moins un/1 User dans la tablea des Users de la DB
                    
                if (listLogin.get(0).getAuthorization().equalsIgnoreCase("administrateur")) {
                    
                    //Page des adminstrateurs
                    XprodDesktop desktopAdmin = new XprodDesktop();
                    desktopAdmin.setVisible(true);
                    desktopAdmin.afficherUser(txtUsernameReg.getText());
                    dispose();
                } else {
                    XprodDesktopClient desktopClient = new XprodDesktopClient();
                    desktopClient.setVisible(true);
                    desktopClient.afficherUser(txtUsernameReg.getText());
                    dispose();
                }
                }
            } catch (Exception e) {
            }
        }
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterActionPerformed
        try {
            
            if (comboboxAuthorizationReg.getSelectedIndex() == 0) {
                JOptionPane.showMessageDialog(this, "Veuillez choisir une autorisation valide !");
                return;
            }
            
            //Je récupère les infos des champs de texte
            String usernameReg = txtUsernameReg.getText();
            String passwordReg = DataEncryption.getSHA256(txtPasswordReg.getText()); // Password encrypté
            String authorizationReg = comboboxAuthorizationReg.getSelectedItem().toString();
            
            try {
                
                con = cn.getCon();
                
                pst = con.prepareStatement("INSERT INTO  user (username, password,authorization) VALUES (?,?,?)");
                pst.setString(1, usernameReg);
                pst.setString(2, passwordReg);
                pst.setString(3, authorizationReg);
                
                pst.executeUpdate();
                
                JOptionPane.showMessageDialog(this, "Données enregistrées !!");
                
                
                //Je vide le contenu des champs remplis
                txtUsernameReg.setText("");
                txtPasswordReg.setText("");
                comboboxAuthorizationReg.setSelectedIndex(0);
                
                tableUpdate();
                        
            } catch (Exception e) {
                System.out.println("je suis dans le bouton "+ e);
            }
                    
        } catch (Exception e) {
            System.out.println("je suis dans le register" + e);
        }
    }//GEN-LAST:event_btnRegisterActionPerformed

    private void btnSupprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSupprimerActionPerformed
        // Supprimer
        DefaultTableModel dtm = (DefaultTableModel) tableUsers.getModel();
        int selectedIndex = tableUsers.getSelectedRow();
        int IDUser = Integer.parseInt(dtm.getValueAt(selectedIndex, 0).toString());
        
        int dialogResult = JOptionPane.showConfirmDialog(null, "Voulez-vous vraiment supprimer cette utilisateur ?");
        if (dialogResult == JOptionPane.YES_OPTION) {
            try {
                
                con = cn.getCon();
                
                pst = con.prepareStatement("DELETE FROM user WHERE idUser = ?");
                pst.setInt(1, IDUser);
                pst.executeUpdate();
                JOptionPane.showMessageDialog(this, "Utilisateur supprimé(e) !");
                
                tableUpdate();
            } catch (SQLException e) {
                Logger.getLogger(Register.class.getName()).log(Level.SEVERE, null, e);
            }
        }
    }//GEN-LAST:event_btnSupprimerActionPerformed

    private void comboboxAuthorizationRegActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboboxAuthorizationRegActionPerformed
        // Séléctionner le bon statut
        
        
    }//GEN-LAST:event_comboboxAuthorizationRegActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Register().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnRegister;
    private javax.swing.JButton btnSupprimer;
    private javax.swing.JComboBox<String> comboboxAuthorizationReg;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableUsers;
    private javax.swing.JPasswordField txtPasswordReg;
    private javax.swing.JTextField txtUsernameReg;
    // End of variables declaration//GEN-END:variables
    List<Users> listLogin = new ArrayList<>();
    UserDao udao = new UserDao();
    Users user = new Users();
}
